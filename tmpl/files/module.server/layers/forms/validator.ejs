const notNode = require("not-node");
const { notValidationError } = require("not-error");

/**
* async validation function, should throw notValidationError if validation failed
* @param {object}	data			form data object
* @param {object}	validationEnvs		special object that provides access to injected on project level resources and libraries
*/
module.exports = async (
/**
* Values to validate in form
*/
	{owner, ownerModel, vals, to , validate },
/**
* special container to pass around global validation libs, CONSTs and inject other entities
*/
	validationEnvs
) => {
	//some preparations
	if (
		//vals checks
	) {
		throw new notValidationError(			
			"<%- ModuleName %>:<%- modelName %>_validation_error",
			{
				//vals: ["%- ModuleName %>:vals_should_be_valid"],
			},
			undefined, //no source error, its custom exception
			{
				//information
				//vals,
				//owner,
				//ownerModel
			}
		);
	}
};
