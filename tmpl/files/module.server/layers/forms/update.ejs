const { MODULE_NAME } = require("../const");
const Form = require("not-node").Form;

const FIELDS = [
	["targetId", { required: true }, "not-node//objectId"],
	["identity", "not-node//identity"],
	["data", `${MODULE_NAME}//_<%- ModelName %>_data`], //sub forms validators should start with underscore
];
const FORM_NAME = `${MODULE_NAME}:<%- ModelName %>UpdateForm`;

class <%- ModelName %>UpdateForm extends Form {
	constructor({ app }) {
		super({ FIELDS, FORM_NAME, app });
	}

	extract(req) {
		const data = this.extractByInstructionsFromRouteActionFields(req, ["fromBody", "xss"], {});
		const envs = this.extractRequestEnvs(req);
		<% if ( ownage ) { %>
		//admin could change ownage for others hardwired
		if (!identity.admin) {
			data.owner && delete data.owner;
			data.ownerModel && delete data.ownerModel;
		}
		<% } %>	
		return {
			...envs, //contains targetId, identity and some more. look list in not-node/src/form/env_extractors/index.js
			data,
		};
	}
}

module.exports = <%- ModelName %>UpdateForm;
