const FIELDS = [
    ["_id", "not-node//_id"],
    ["<%- modelName %>ID", "not-node//ID"],
    <% if (fields && Array.isArray(fields)) { %>
    <% for(let field of fields){ %>
    "<%- field %>",
    <% } %>
    <% } %>
    ["owner", "not-node//owner"],
    ["ownerModel", "not-node//ownerModel"],
    ["createdAt", "not-node//createdAt"],
    ["updatedAt", "not-node//updatedAt"],
];

const actionNamePath = "/:actionName";
const idActionPath = "/:record[_id]/:actionName";

module.exports = {
    model: "<%- modelName %>",
    url: "/api/:modelName",
    fields: FIELDS,
    privateFields: [],
    actions: {                        
        <% if (Object.hasOwn(actions, 'create')){ %>
        create: {
            method: "put",
            title: "<%- ModuleName %>:form_title_create",
            description: "<%- ModuleName %>:form_description_create",
            rules: [
                {
                    auth: true,
                    root: true,
                    fields: [<%- fields.map((entry) => `"${entry}"`).join(',')  %>,"owner"],
                },
                {
                    auth: true,
                    role: ["client", "confirmed"],
                    fields: ["title"],
                },
            ],
            data: ["record"],
            postFix: actionNamePath,
        },
        <% } %>
        <% if (Object.hasOwn(actions,'get')){ %>
        get: {
            method: "get",
            title: "<%- ModuleName %>:form_title_details",
            description: "<%- ModuleName %>:form_description_details",
            rules: [
                {
                    auth: true,
                    root: true,
                    fields: [
                        "_id",
                        "<%- modelName %>ID",
                        <%- fields.map((entry) => `"${entry}"`).join(',')  %>,
                        "owner",
                        "ownerModel",
                        "createdAt",
                        "updatedAt",
                    ],
                },
                {
                    auth: true,
                    role: ["client", "confirmed"],
                    fields: [
                        "_id",
                        "<%- modelName %>ID",
                        <%- fields.map((entry) => `"${entry}"`).join(',')  %>,
                        "createdAt",
                        "updatedAt",
                    ],
                },
            ],
            postFix: idActionPath,
        },
        <% } %>
        <% if (Object.hasOwn(actions,'getRaw')){ %>
        getRaw: {
            method: "get",
            title: "<%- ModuleName %>:form_title_details",
            description: "<%- ModuleName %>:form_description_details",
            rules: [
                {
                    auth: true,
                    root: true,
                    fields: [
                        "_id",
                        "<%- modelName %>ID",
                        <%- fields.map((entry) => `"${entry}"`).join(',')  %>,
                        "owner",
                        "ownerModel",
                        "createdAt",
                        "updatedAt",
                    ],
                },
                {
                    auth: true,
                    role: "admin",
                    fields: [
                        "_id",
                        "<%- modelName %>ID",
                        <%- fields.map((entry) => `"${entry}"`).join(',')  %>,
                        "owner",
                        "ownerModel",
                        "createdAt",
                        "updatedAt",
                    ],
                },
                {
                    auth: true,
                    role: ["client", "confirmed"],
                    fields: [
                        "<%- modelName %>ID",
                        <%- fields.map((entry) => `"${entry}"`).join(',')  %>,
                        "createdAt",
                        "updatedAt",
                    ],
                },
            ],
            postFix: idActionPath,
        },
        <% } %>
        <% if (Object.hasOwn(actions,'update')){ %>
        update: {
            title: "<%- ModuleName %>:form_title_update",
            description: "<%- ModuleName %>:form_description_update",
            method: "post",
            rules: [
                {
                    auth: true,
                    root: true,
                    fields: [<%- fields.map((entry) => `"${entry}"`).join(',')  %>, "owner", "ownerModel"],
                },
                {
                    auth: true,
                    role: ["client", "confirmed"],
                    fields: [<%- fields.map((entry) => `"${entry}"`).join(',')  %>],
                },
            ],
            data: ["record"],
            postFix: idActionPath,
        },        
        <% } %>
        <% if (Object.hasOwn(actions,'delete')){ %>
        delete: {
            title: "<%- ModuleName %>:form_title_delete",
            description: "<%- ModuleName %>:form_description_delete",
            method: "delete",
            rules: [
                {
                    auth: true,
                    root: true,
                },
                {
                    auth: true,
                    role: ["client", "confirmed"],
                },
            ],
            data: ["record"],
            postFix: idActionPath,
        },
        <% } %>
        <% if (Object.hasOwn(actions,'listAndCount')){ %>
        listAndCount: {
            method: "get",
            data: ["pager", "sorter", "filter", "search"],
            rules: [
                {
                    auth: true,
                    root: true,
                },
                {
                    auth: true,
                    role: "admin",
                },
                {
                    auth: true,
                    role: ["client", "confirmed"],
                },
            ],
            postFix: actionNamePath,
        },
        <% } %>
        <% if (Object.hasOwn(actions,'listAll')){ %>
        listAll: {
            method: "get",
            data: ["record", "sorter"],
            fields: [
            <%- fields.map((entry) => `"${entry}"`).join(',')  %>,
                "createdAt",
                "updatedAt",
            ],
            postFix: actionNamePath,
            rules: [
                {
                    root: true,
                },
                {
                    auth: true,
                    role: ["manager"],
                },
                {
                    auth: true,
                },
            ],
        },
        <% } %>
    },
};
